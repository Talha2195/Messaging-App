generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                @id @default(autoincrement())
  username          String             @unique
  password          String
  name              String?
  bio               String?
  picture           String?         
  sentMessages      Messages[]         @relation("SentMessages")
  receivedMessages  Messages[]         @relation("ReceivedMessages")
  sentRequests      FriendRequest[]    @relation("SentRequests") 
  receivedRequests  FriendRequest[]    @relation("ReceivedRequests") 
  friends           Friendship[]       @relation("UserFriends")
  friendOf          Friendship[]       @relation("FriendOf")
}

model Messages {
  id          Int      @id @default(autoincrement())
  message     String
  createdAt   DateTime @default(now())
  senderId    Int
  receiverId  Int
  sender      User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver    User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
}

model FriendRequest {
  id          Int      @id @default(autoincrement())
  senderId    Int
  receiverId  Int
  createdAt   DateTime @default(now())
  status      RequestStatus
  
  sender      User     @relation("SentRequests", fields: [senderId], references: [id])
  receiver    User     @relation("ReceivedRequests", fields: [receiverId], references: [id])
}

model Friendship {
  id          Int      @id @default(autoincrement())
  userId      Int
  friendId    Int
  createdAt   DateTime @default(now())

  user        User     @relation("UserFriends", fields: [userId], references: [id])
  friend      User     @relation("FriendOf", fields: [friendId], references: [id])
}

enum RequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}